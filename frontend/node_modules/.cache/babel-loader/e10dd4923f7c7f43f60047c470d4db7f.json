{"ast":null,"code":"var _jsxFileName = \"/Users/supercoder/Desktop/BootCamp/BACKEND/MERN_DesignShop/frontend/src/pages/Home.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport HomeCard from '../components/HomeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  var arr = [];\n  var maxVal = 4.5;\n  var delta = Math.floor(products.length / maxVal); // avoid filter because you don't want\n  // to loop over 10000 elements !\n  // just access them directly with a for loop !\n  //                                 |\n  //                                 V\n\n  useEffect(() => {\n    fetch('http://127.0.0.1:8080/shop/all').then(response => response.json()).then(productsArray => setProducts(productsArray));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","HomeCard","Home","products","setProducts","arr","maxVal","delta","Math","floor","length","fetch","then","response","json","productsArray"],"sources":["/Users/supercoder/Desktop/BootCamp/BACKEND/MERN_DesignShop/frontend/src/pages/Home.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport HomeCard from '../components/HomeCard'\nconst Home = () => {\n    const [products, setProducts] = useState([])\n\n\n    var arr = [];\n\n    var maxVal = 4.5;\n\n    var delta = Math.floor(products.length / maxVal);\n\n    // avoid filter because you don't want\n    // to loop over 10000 elements !\n    // just access them directly with a for loop !\n    //                                 |\n    //                                 V\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8080/shop/all')\n            .then((response) => response.json())\n            .then((productsArray) => setProducts(productsArray))\n    }, [])\n\n\n\n\n\n    return (\n        <div>\n            {/* {\n                products.map((product, i) =>\n                    <HomeCard\n                        key={i}\n                        ProductLink={product.ProductLink}\n                        ProductName={product.ProductName}\n                        Company={product.Company}\n                        Price={product.Price}\n                    />\n                )\n            } */}\n\n\n\n\n\n        </div>\n\n    )\n}\n\nexport default Home"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;;AACA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EAGA,IAAIM,GAAG,GAAG,EAAV;EAEA,IAAIC,MAAM,GAAG,GAAb;EAEA,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWN,QAAQ,CAACO,MAAT,GAAkBJ,MAA7B,CAAZ,CARe,CAUf;EACA;EACA;EACA;EACA;;EAEAN,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,aAAD,IAAmBX,WAAW,CAACW,aAAD,CAFxC;EAGH,CAJQ,EAIN,EAJM,CAAT;EAUA,oBACI;IAAA;IAAA;IAAA;EAAA,QADJ;AAqBH,CA/CD;;GAAMb,I;;KAAAA,I;AAiDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}